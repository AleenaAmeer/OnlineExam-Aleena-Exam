@model OnlineExam.Models.ExamQnViewModel

@{
    ViewBag.Title = "CreateExam";
}


<h2>Create</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>Exam</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.PgmId, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("PgmId", ViewBag.ProgramID as SelectList, "Please select Type", new { @class = "ddl" })
            @*@Html.EditorFor(model => model.PgmId, new { htmlAttributes = new { @class = "form-control" } })*@
            @Html.ValidationMessageFor(model => model.PgmId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ClassId, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">

            @Html.DropDownList("ClassId", ViewBag.ClassID as SelectList, "Please select Type", new { @class = "ddl" })

            @*@Html.EditorFor(model => model.ClassId, new { htmlAttributes = new { @class = "form-control" } })*@
            @Html.ValidationMessageFor(model => model.ClassId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.CourseId, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @*@Html.EditorFor(model => model.CourseId, new { htmlAttributes = new { @class = "form-control" } })*@

            @Html.DropDownList("CourseId", ViewBag.CourseID as SelectList, "Please select Type", new { @class = "ddl" })
            @Html.ValidationMessageFor(model => model.CourseId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.SubjectId, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">

            @Html.DropDownList("SubjectID", ViewBag.SubjectID as SelectList, "Please select Type", new { @class = "ddl" })
            @*@Html.EditorFor(model => model.SubjectId, new { htmlAttributes = new { @class = "form-control" } })*@
            @Html.ValidationMessageFor(model => model.SubjectId, "", new { @class = "text-danger" })
        </div>
    </div>

    @*<div class="form-group">
            @Html.LabelFor(model => model.CreatedBy, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CreatedBy, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CreatedBy, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CreatedDateTime, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CreatedDateTime, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CreatedDateTime, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IsActive, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.IsActive, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.IsActive, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IsDeleted, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.IsDeleted, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.IsDeleted, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DeletedBy, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DeletedBy, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DeletedBy, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ModifiedBy, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ModifiedBy, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ModifiedBy, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ModifiedDateTime, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ModifiedDateTime, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ModifiedDateTime, "", new { @class = "text-danger" })
            </div>
        </div>*@

    <div class="form-group">
        @Html.LabelFor(model => model.FromDate, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.FromDate, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.FromDate, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ToDate, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ToDate, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ToDate, "", new { @class = "text-danger" })
        </div>
    </div>

    @*<div class="form-group">
            @Html.LabelFor(model => model.DeletedDateTime, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DeletedDateTime, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DeletedDateTime, "", new { @class = "text-danger" })
            </div>
        </div>*@
    <div class="form-group">
        @Html.LabelFor(model => model.ExamTime, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ExamTime, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ExamTime, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.TotalMark, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.TotalMark, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.TotalMark, "", new { @class = "text-danger" })
        </div>
    </div>

    @*<div class="form-group">
            @Html.Label("Questions", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.RadioButton("Question", "Select From question Bank", htmlAttributes: new { @class = "control-label col-md-2" }) Select From question Bank:
            </div>
            <div class="col-md-10">
                @Html.RadioButton("Question", "Select Manually", htmlAttributes: new { @class = "control-label col-md-2" })     Select Manually:
            </div>
        </div>*@

    <div class="form-group">
        @Html.Label("Questions", htmlAttributes: new { @class = "control-label col-md-2" })

        <div class="col-md-10">

            @Html.RadioButton("Question", "Select From question Bank", new { id = "QnBank" })
            Select From Question Bank
        </div>
        <br>

        <div class="col-md-10">

            @Html.RadioButton("Question", "Select Manually", new { id = "QnManual" })
            Select Manually
        </div>
    </div>



    <div class="panel-body">
        <table id="assets-data-table" class="table table-striped table-bordered" style="width:100%">
            <thead>
                <tr>
                    <th>Id</th>
                    <th>Questions</th>
                    <th>Mark</th>
                    <th>
                        Select

                    </th>

                </tr>
            </thead>
            <tbody>
            </tbody>

        </table>
        <table id="selectedqns" class="table table-striped table-bordered" style="width:100%">
            <thead>
                <tr>
                    <th>Id</th>
                    <th>Questions</th>
                    <th>Mark</th>

                </tr>
            </thead>
            <tbody>
            </tbody>

        </table>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="button" id="Confirm" value="Confirm" />
            </div>
        </div>

    </div>



    <div class="form-group">
        @*@Html.LabelFor(model => model.QnId, htmlAttributes: new { @class = "control-label col-md-2" })*@
        <div class="col-md-10">
            @Html.EditorFor(model => model.QnId, new { htmlAttributes = new { @class = "form-control", @id = "questionId" } })

            @*<input type="text" id="questionId"/>*@
            @*@Html.ValidationMessageFor(model => model.QnId, "", new { @class = "text-danger" })*@
        </div>
    </div>
    <div class="form-group">
        @*@Html.LabelFor(model => model.QnId, htmlAttributes: new { @class = "control-label col-md-2" })*@
        <div class="col-md-10">
            @Html.EditorFor(model => model.IsDataEntryQn, new { htmlAttributes = new { @class = "form-control", @id = "IsDataQn",style = "display:none"  } })

            @*<input type="text" id="questionId"/>*@
            @*@Html.ValidationMessageFor(model => model.QnId, "", new { @class = "text-danger" })*@
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>
</div>

}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")



    @*<script type="text/javascript" src="~/Scripts/jquery-1.10.2.min.js">

        </script>*@

<script>


        jQuery(document).ready(function () {

            //GetCourseWiseClass
            $("#ClassId").change(function () {
                var id = $(this).find(":selected").val()

                //   console.log(id);
                var selectid = { "id": id }
               


                $.ajax({
                    url: "GetCourseWiseClass",
                    data: JSON.stringify(selectid),
                    type: 'POST',
                    contentType: 'application/json; charset=utf-8',
                    success: function (data) {
                        // Variable data contains the data you get from the action method



                        $("#CourseId").empty();
                        $("#CourseId").append('<option value="">--Please Select Type--</option>');

                        $.each(data, function (i) {
                            var optionhtml = '<option value="' +
                                data[i].Value + '">' + data[i].Text + '</option>';
                            $("#CourseId").append(optionhtml);

                        });


                    }
                });

            });

            $('#assets-data-table').hide();
            $('#selectedqns').hide();
            $('#questionId').hide();
            $("#Confirm").hide();
            $('#IsDataQn').hide;
        });

        //select from qn bank

        $("#QnBank").change(function () {
            $("#Confirm").show();

            $('#assets-data-table').show();

            $('#selectedqns').hide();
            $('#IsDataQn').hide;

            $('#IsDataQn').val(1);
            
          // var pgmId = $("#PgmId").find(":selected").val()
           /* var pgmId = { "id": pgm }*/

        //    var courseId = $("#CourseId").find(":selected").val()
            /*var courseId = { "id": course }*/

        //    var subjectId = $("#SubjectID").find(":selected").val()
            //var subjectId = { "id": subject }

            var par = { pgmId: $("#PgmId").find(":selected").val(), courseId: $("#CourseId").find(":selected").val(), subjectId: $("#SubjectID").find(":selected").val()};


            $.ajax({
                url: "GetQnFromQnBank",
                data: JSON.stringify(par),
                type: 'POST',
                contentType: 'application/json; charset=utf-8',
                success: function (data) {
                    // Variable data contains the data you get from the action method

                    //var table = $("#assets-data-table tbody");
                    //$.each(data, function (i) {
                    //    table.append("<tr><td>" + data[i].Id + "</td><td>" + data[i].Text  + "</td></tr>");
                    //});
                    $('#assets-data-table tbody').empty();
                    var table = $("#assets-data-table tbody");

                    var chk = "<input type='checkbox' id='chk_" + "' />";
                   

                    $.each(data, function (i) {
                        if (data[i].Photo == null)
                        {

                            table.append("<tr><td>" + data[i].Id + "</td><td>" + data[i].Questions + "</td><td>" + data[i].Mark + "</td><td>" + chk + "</td></tr>");
                        }
                        else
                        {
                            var path = data[i].Photo;
                            var img = "<img width='350' height='250' src='https://entrancecoachexam.azurewebsites.net/" + path + "' " + "' />";
                            table.append("<tr><td>" + data[i].Id + "</td><td>" + img + "</td><td>" + data[i].Mark + "</td><td>" + chk + "</td></tr>");

                        }


                    });


                }
            });
        });

        // GetManualQn
        $("#QnManual").change(function () {
            $("#Confirm").show();
            $('#assets-data-table').show();
            $('#selectedqns').hide();
            $('#IsDataQn').hide;

            $('#IsDataQn').val(0);

            var par = { pgmId: $("#PgmId").find(":selected").val(), courseId: $("#CourseId").find(":selected").val(), subjectId: $("#SubjectID").find(":selected").val(), createdby:4 };

            $.ajax({
                url: "GetManualQn",
                data: JSON.stringify(par),
                type: 'POST',
                contentType: 'application/json; charset=utf-8',
                success: function (data) {
                    // Variable data contains the data you get from the action method

                    $('#assets-data-table tbody').empty();
                    var table = $("#assets-data-table tbody");

                    var chk = "<input type='checkbox' id='chk_" + "' />";

                    $.each(data, function (i) {
                        if (data[i].Photo == null)
                        {

                            table.append("<tr><td>" + data[i].Id + "</td><td>" + data[i].Questions + "</td><td>" + data[i].Mark + "</td><td>" + chk + "</td></tr>");
                        }
                        else
                        {
                            var path = data[i].Photo;
                            var img = "<img width='350' height='250' src='https://entrancecoachexam.azurewebsites.net/" + path + "' " + "' />";
                            table.append("<tr><td>" + data[i].Id + "</td><td>" + img + "</td><td>" + data[i].Mark + "</td><td>" + chk + "</td></tr>");

                        }
                    });


                }
            });
        });


        ////Insert ExamQnTable
        $("#Confirm").on("click", function () {
            var qnidtextbox = '';
            $('#selectedqns tbody').empty();
            $('#selectedqns').show();
            $('#IsDataQn').hide;

            //Loop through the Table rows and build a JSON array.
            var qns = new Array();
            $("#assets-data-table tr").each(function () {

                var row = $(this).has("input[type=checkbox]:checked");
                var qn = {};
                qn.QnId = row.find("TD").eq(0).html();
                qn.Questions = row.find("TD").eq(1).html();
                qn.Mark = row.find("TD").eq(2).html();

                qns.push(qn);

                var table = $("#selectedqns");
                if (row.length != 0) {
                    table.append("<tr><td>" + qn.QnId + "</td><td>" + qn.Questions + "</td><td>" + qn.Mark + "</td></tr>");
                    $('#questionId').val(qnidtextbox + qn.QnId + '|');
                    qnidtextbox = $('#questionId').val();
                }
                $('#assets-data-table').hide();
                $("#Confirm").hide();
                //$("#questionId").val(qn.QnId.toString())


                //    //Send the JSON array to Controller using AJAX.
                //    $.ajax({
                //    type: "POST",
                //    url: "InsertExamQnTable",
                //    data: JSON.stringify(qns),
                //    contentType: "application/json; charset=utf-8",
                //    dataType: "json",
                //    success: function (r) {
                //        $.each(r, function (i) {
                //            var optionhtml = r[i].QnId;

                //            $("#questionId").append(optionhtml);

                //        });

                //    }
                //});
            });
        });

</script>
}